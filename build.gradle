plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'vongquaymayman'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile group: 'io.sentry', name: 'sentry-spring-boot-starter', version: '1.7.30'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-redis', version: '1.2.0.RELEASE'
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '1.0.0'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: '2.2.2.RELEASE'
    compile group: 'org.springframework.data', name: 'spring-data-redis', version: '2.2.3.RELEASE'
    runtimeOnly 'mysql:mysql-connector-java'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.6'
    compile group: 'com.squareup.okhttp', name: 'okhttp', version: '2.7.5'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
//    compile group: 'org.springframework.boot', name: 'spring-boot-starter-amqp'
    compile group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '1.0.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    implementation 'org.mapstruct:mapstruct:1.3.0.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Final'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'

}
compileJava {
    // if you need to configure mapstruct component model
    options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"
}
//test {
//    useJUnitPlatform()
//}
